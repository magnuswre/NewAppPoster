{% comment %} <div class="w-1/3">
  {% for media in product.media %}
    {% comment %} {% render 'product-media', media: media %} 
    <div
      id="imageText-{{ media.id }}"
      class="absolute top-0 left-0 w-1/2 h-1/2 flex items-center justify-center text-white text-2xl"
    ></div>
    {{ media.id }}
    {{ media.alt }}
    {{ media.media_type }}
    {{ media.position }}
    <p>hejsan</p>
    {{ media.preview_image }}
  {% endfor %}


</div> 

<div class="w-1/3">
{% comment %} {% for images in product.images %}
     {{ images.id }}
  {% endfor %}  {% endcomment %}

  {% comment %} {{ product | image_url: width: 200 | image_tag }} {% endcomment %}
  {% comment %} {{ images.id }}
  <p>hej</p>
  {% for option in product.options %}
   <p> {{ option.name }} </p>
  {% endfor %}
</div>
<p>{{ product.title }}</p>
{% for option in product.options %}
  <p>{{ option }}</p>
  <p>{{ product.options | json }}</p>
{% endfor %}


{% comment %} {{ product | image_url: width: 200 | image_tag }} {% endcomment %}
{% comment %} {{ images.id }} 
{% for media in product.media %}
  {{ media.alt }}
{% endfor %} 


{% for media_item in product.media %}
  {{ media_item.id }}
{% endfor %}
</div>
{% endcomment %}

<div class="w-1/3">
  {% for media in product.media %}
    {% comment %} {% render 'product-media', media: media %} {% endcomment %}
    <img src="{{ media | img_url: 'large' }}" width="100" height="100" alt="{{ media.preview_image.alt }}" class="w-full h-full object-cover">
    <div
      id="imageText-{{ media.id }}"
      class="absolute top-0 left-0 w-1/2 h-1/2 flex items-center justify-center text-white text-2xl"
    ></div>
    {{ media.id }}
    {{ media.alt }}
    {{ media.media_type }}
    {{ media.position }}
    <p>hejsan</p>
    {{ media.preview_image }}
  {% endfor %}


</div>

<div class="w-1/3">
{% comment %} {% for images in product.images %}
     {{ images.id }}
  {% endfor %}  {% endcomment %}

  {% comment %} {{ product | image_url: width: 200 | image_tag }} {% endcomment %}
  {% comment %} {{ images.id }} {% endcomment %}
  <p>hej</p>
  {% for option in product.options %}
   <p> {{ option.name }} </p>
  {% endfor %}
</div>
<p>{{ product.title }}</p>
{% for option in product.options %}
  <p>{{ option }}</p>
  <p>{{ product.options | json }}</p>
{% endfor %}


{% comment %} {{ product | image_url: width: 200 | image_tag }} {% endcomment %}
{% comment %} {{ images.id }} {% endcomment %}
{% for media in product.media %}
  {{ media.alt }}
{% endfor %} 


{% for media_item in product.media %}
  {{ media_item.id }}
{% endfor %}
</div>

//   document.addEventListener('DOMContentLoaded', function () {
//     const carousel = document.querySelector('.carousel');
//     const slides = carousel.querySelectorAll('.carousel-slide');
//     const prevButton = carousel.querySelector('.carousel-prev');
//     const nextButton = carousel.querySelector('.carousel-next');
//     let currentSlide = parseInt(carousel.dataset.currentSlide);
//     const totalSlides = parseInt(carousel.dataset.totalSlides);

//     function updateSlides() {
//       slides.forEach((slide, index) => {
//         slide.style.display = index === currentSlide ? 'block' : 'none';
//       });
//     }

//     prevButton.addEventListener('click', function () {
//       currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
//       updateSlides();
//     });

//     nextButton.addEventListener('click', function () {
//       currentSlide = (currentSlide + 1) % totalSlides;
//       updateSlides();
//     });

//     updateSlides();
//   });

//   document.querySelectorAll('.variant-selector-class').forEach((radioButton) => {
//   radioButton.addEventListener('change', (event) => {
//     const color = event.target.dataset.color;
    
//     // Check if the current option is related to 'Color'
//     if (event.target.name === 'options[Color]') {
//       console.log('Clicked color:', color);
      
//       // Display logic for the alt text based on the color value
//       const altText = getAltTextForColor(color);

//       console.log('Alt text:', altText);

//       // Now you can use the altText as needed in your application
//     }

//     // Rest of your existing logic for updating slides
//     const carousel = document.querySelector('.carousel');
//     const slides = carousel.querySelectorAll('.carousel-slide');
//     slides.forEach((slide) => {
//       if (slide.dataset.color === color) {
//         slide.style.display = 'block';
//       } else {
//         slide.style.display = 'none';
//       }
//     });
//   });
// });

// // Function to retrieve alt text based on color value
// function getAltTextForColor(color) {
//   // Implement your logic to retrieve alt text based on color
//   // For example, you can store alt text information in a data attribute of your radio buttons
//   const altTextElement = document.querySelector(`input[data-color="${color}"]`);
  
//   // Check if the altTextElement exists before trying to access its dataset
//   if (altTextElement) {
//     return altTextElement.dataset.alt || ''; // Return alt text or an empty string if not found
//   }

//   // Return a default value if the element is not found
//   return '';
// }