<style>
  div ul li .henrikYolo #displayPetName {
    font-family: Arial,'Times New Roman';
  }
  .rotate-90 {
    transform: rotate(90deg);
  }
  input[type='radio'] {
    display: none;
  }
  .variant-selector-label {
    background-color: #ceedd8;
  }
  .variant-selector-label.selected {
    border: 1px solid black;
  }
 .magnusYolo {
    display: none;
  }
  .fontChangeDropdownContent{
    display: none;
  }
  #three{
    display: block;
  }
</style>

   {% comment %} {% render {{ 'images.product_id' }} %} {% endcomment %}
      {% comment %} <p>image.size {{ image.size }} </p> {% endcomment %}
      {% comment %} <p>image.product_id:  {{ image.product_id }}</p> {% endcomment %}
    
      {% comment %} <p>image.variants:  {{ image.variants }}</p> {% endcomment %}
      {% comment %} <p>image.alt:  {{ image.alt }}</p> {% endcomment %}
      {% comment %} <p>image.src:  {{ image.src }}</p> {% endcomment %}
      {% comment %} <p>image.width:  {{ image.width }}</p> {% endcomment %}
      {% comment %} <p>image.height:  {{ image.height }}</p> {% endcomment %}
      {% comment %} <p>image.position:  {{ image.position }}</p> {% endcomment %}
      {% comment %} <p>image.url: {{ image. }} </p> {% endcomment %}
{% assign selected_variant = product.selected_or_first_available_variant %}

<div class="max-w-5xl mx-auto my-10">
  <div class="m-3 md:m-3 grid grid-cols-1 md:grid-cols-3 gap-3">
    {% comment %} PRODUCT IMAGE {% endcomment %}
    <div>
      {% for image in product.images %}
        <img 
        src="{{ image | img_url: 'large' }}" 
        alt=""
        width="200"
        height="200"
        loading="lazy"
        >
        <p>Product id: {{ product.id }} </p>
        <p>Image.id:  {{ image.id }}</p>
        <p>Attached to variant?: {{ image.attached_to_variant? }} </p>
        <br>
      {% endfor %}
    </div>


    
    <div class="product-medias my-2 ">
      <div class="carousel flex flex-col" data-current-slide="0" data-total-slides="{{ product.media.size }}">
        {% for media in product.media %}
          <div class="carousel-slide" style="display: none;" data-id="{{ media.id }}" data-color="{{ media.alt }}">
            <div class="overflow-hidden relative ">
              <img
                class="w-full h-full object-cover customMediaAlt"
                data-option-value="{{ media.alt }}"
                data-alt=" { media.alt }}"
                data-media-id=" {{ media.id }}"
                data-media-url="{{ media.url }}"
                src="{{ media | img_url: 'large' }}"
                alt="{{ media.preview_image.alt }}"
                width="100"
                height="100"
                loading="lazy"
              >
              <div
              id="imageText-{{ media.id }}"
              class="absolute top-1/4 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-full h-full flex items-end justify-center text-white text-2xl"
            ></div>
              {% comment %} <p>{{ media.alt }}</p> {% endcomment %}
            </div>
          </div>
        {% endfor %}
        <div class="flex items-center justify-between mt-4">
          <button class="carousel-prev">{% render 'icon-chevron-left' %}</button>
          <button class="carousel-next">{% render 'icon-chevron-right' %}</button>
        </div>
      </div>
    </div>
    
    <div class="product--information top-5 p-2 ">
      {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
        <input type="hidden" name="id" value="{{ selected_variant.id }}">
              <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                <div>
                  <ul>
                    <li class="w-full flex flex-col">
                      <h2 class="createText bg-gray-200 text-center mb-5 h-10 flex items-center justify-center">Välj text</h2>
                      <div class="createdInputTextDropdownContent flex items-center justify-center gap-3 h-10 mb-7 ">
                          <div class="custom-variants-option border w-19 flex text-center">
                            <label class="variant-selector-label py-1 px-1" for="displayPetNameTwo">
                              <input
                                id="displayPetNameTwo"
                                type="radio"
                                name="displayPetNameTwo"
                              >
                              <input 
                                class="border w-full text-center" 
                                id="displayPetName" type="text" 
                                placeholder= "ex. Pluto"
                                maxlength="10"
                                required
                                >
                            </label>
                          </div>
                      </div>
                    </li>
                  </ul>
                </div>

                <div>
                  <ul>
                    <li class="w-full flex flex-col">
                      <div class="petnamePhoneNumber  bg-gray-200 grid grid-cols-3 mb-5 h-10 items-center text-center ">
                      <div class=""></div>
                      <h2 class="">Nummer*</h2>
                      <p class="text-xs mr-2"> * Visas på baksidan</p>
                      </div>
                      <div class="petnamePhoneNumberDropdownContent flex items-center justify-center gap-3 h-10 mb-7 ">
                          <div class="custom-variants-option border w-19 flex text-center">
                            <label id="variant-selector-label-phonenumber"
                                class="variant-selector-label py-1 px-1" for="displayPetNameTwo">
                              <input
                                id="petnamePhoneNumber"
                                type="radio"
                                name="petnamePhoneNumber"
                              >
                              <input 
                                class="border w-full text-center" 
                                id="displayPetName" type="number" 
                                placeholder="ex. 0701234567"
                              >
                            </label>
                          </div>
                      </div>
                    </li>
                  </ul>
                </div>

              {% for option in product.options_with_values %}
                  <div>
                    <ul>
                      <li class="w-full flex flex-col">
                      <div class="henrikYolo bg-gray-200 grid grid-cols-3 mb-5 h-10 items-center ">
                        <div></div>
                        <h2
                          class="text-center"
                          for="Option-{{ section.id }}-{{ forloop.index0 }}"
                        >
                          {{ option.name }}
                        </h2>
                        <div class="flex justify-end items-center">
                          <span class="chevron text-gray-400 mr-2">{% render 'icon-chevron-input' %}</span>
                        </div>
                        </div>
                        <div class="flex items-center flex-wrap gap-3 mb-6 magnusYolo ">
                          {% for value in option.values %}
                            <div class="custom-variants-option border w-19 flex text-center  ">
                              <label class="variant-selector-label py-1 px-1">
                                <input
                                  class="variant-selector-class"
                                  type="radio"
                                  name="options[{{ option.name | escape }}]"
                                  value="{{ value | escape }}"
                                  {% if option.selected_value == value %}
                                    checked
                                  {% endif %}
                                >
                                {{ value }}
                              </label>
                            </div>
                          {% endfor %}
                        </div>
                      </li>
                    </ul>
                  </div>
                  <script type="application/json">
                    {{ product.variants | json }}
                  </script>
                {% endfor %}
              </variant-selector>

              <div class="my-2 mb-5">
                <div class="hidden">
                <input type="checkbox" id="one" name="quantity" value="1" checked>
                <label for="one">1</label><br>
                <input type="checkbox" id="two" name="quantity" value="2">
                <label for="two">2</label><br>
                </div>
                
                <div class="grid grid-cols-8 justify-center">
                  <div class="col-span-2 flex items-center justify-center">
                    <input class="w-5 h-5" type="checkbox" id="three" name="quantity" value="3">
                  </div>
                  <div class="col-span-6 ">
                    <label for="three">{{ "Köp 3 st betala för 2 st!" | upcase }}</label>
                  </div>
                </div>
              </div>
           
              <div class="my-3">
                <button
                  type="submit"
                  name="add"
                  id="AddToCart"
                  class="border border-black w-full py-4 px-6 bg-customGreen text-white hover:bg-gray-700 rounded-sm my-2"
                  {% if selected_variant.available == false %}
                    disabled
                  {% endif %}
                >
                  {% if selected_variant.available == false %}
                    Sold Out
                  {% else %}
                    LÄGG I VARUKORG
                  {% endif %}
                </button>
              </div>
         </div>
  {% endform %}
  </div>
</div>


{% comment %} SCRIPT  {% endcomment %}

<script>

  document.addEventListener('DOMContentLoaded', function () {
    
    
    // Input där man skriver in telefonnummer till djuret
    const textInput = document.getElementById('displayPetName');
    
    // Hämta värdet som är sparad i local storage
    const storedValue = localStorage.getItem('displayPetName');
      if (storedValue) {
        textInput.value = storedValue;
    }

    // Bildkarusellen/Slide
    const carousel = document.querySelector('.carousel');
    const slides = carousel.querySelectorAll('.carousel-slide');
    const prevButton = carousel.querySelector('.carousel-prev');
    const nextButton = carousel.querySelector('.carousel-next');
    let currentSlide = parseInt(carousel.dataset.currentSlide);
    const totalSlides = parseInt(carousel.dataset.totalSlides);

    
    
    const altTexts = [];

    // Hämtar alla alt. texter från bilderna och lägger in dem i altTexts = [].
    function getAllAltText() {
      slides.forEach((slide) => { 
        const image = slide.querySelector('img');
    
        altTexts.push(image.alt);
      });
      console.log('All alt texts:', altTexts);
      return altTexts;
    }
    getAllAltText();


    // Uppdatera slides
    // Bilden visas om indexet på bilden är samma som indexet på alt. texten
    function updateSlides() {
      slides.forEach((slide, index) => {
        slide.style.display = index === currentSlide ? 'block' : 'none';
      });

     //  Hämtar den aktuella bilden (currentImage) från den aktuella bilden som visas i bildkarusellen/Slide (slides[currentSlide])
      const currentImage = slides[currentSlide].querySelector('img');
      // Skriver ut information om den aktuella bilden och dess alternativtext (alt.) till konsolen.
      console.log('Slide index:', currentSlide, 'Alt text:', currentImage.alt);
    }

    // Väljer alla HTML-element med klassen .variant-selector-label.
    document.querySelectorAll('.variant-selector-label').forEach((label) => {
      // Lägger till en eventlyssnare på varje element med klassen .variant-selector-label.
      label.addEventListener('click', function (event) {
      // Om det element som klickas på har namnet 'options[Färg]' så körs koden nedan.
        if (event.target.name === 'options[Färg]') {
          // Skriver ut värdet på det element som klickats på till konsolen.
          console.log('event.target.value:' + event.target.value);
          
          // Hämtar indexet på den alt. text som matchar det värde som klickats på.
          const matchingSlideIndex = altTexts.indexOf(event.target.value);
          if (matchingSlideIndex !== -1) {
            currentSlide = matchingSlideIndex;
            console.log('you clicked on a label with matching färg');
          }

          updateSlides();
        }
      });
    });

    prevButton.addEventListener('click', function () {
      currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
      updateSlides();
    });

    nextButton.addEventListener('click', function () {
      currentSlide = (currentSlide + 1) % totalSlides;
      updateSlides();
    });

    updateSlides();
  });

  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.setInitialSelectedOptions();
      const radioButtons = this.querySelectorAll('.variant-selector-class');
      radioButtons.forEach((radioButton) => {
        radioButton.addEventListener('click', this.onVariantChange.bind(this));
      });
    }

    setInitialSelectedOptions() {
      const selectedOptions = this.querySelectorAll('input[type="radio"]:checked');
      selectedOptions.forEach((selectedOption) => {
        const label = selectedOption.closest('.variant-selector-label');
        if (label) {
          label.classList.add('selected');
        }
      });
    }
    onVariantChange(event) {
      console.log('Variant changed:', event.target.value);
      const clickedOption = event.target.closest('.variant-selector-label');
      const category = clickedOption.closest('ul');

      const previouslySelectedOption = category.querySelector('.variant-selector-label.selected');
      if (previouslySelectedOption) {
        previouslySelectedOption.classList.remove('selected');
      }

      if (clickedOption) {
        clickedOption.classList.add('selected');
      }

      this.getSelectedOptions();
      this.getSelectedVariant();

      if (this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        this.updatePrice();
      }
    }

    getSelectedOptions() {
      const checkedRadioButtons = document.querySelectorAll('input[type="radio"]:checked');
      this.options = Array.from(checkedRadioButtons, (radioButton) => radioButton.value);
      console.log('this.options:', this.options);
    }

    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }

    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find((variant) => {
        const findings = !variant.options
          .map((option, index) => {
            return this.options[index] === option;
          })
          .includes(false);

        if (findings) return variant;
      });

    }
    updateURL() {
      if (!this.currentVariant) return;
      window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
    }

    updateFormID() {
      const form_input = document.querySelector('#product-form').querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    updatePrice() {
      fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
        .then((response) => response.text())
        .then((responseText) => {
          const id = `price-${this.dataset.section}`;
          const html = new DOMParser().parseFromString(responseText, 'text/html');

          const oldPrice = document.getElementById(id);
          const newPrice = html.getElementById(id);

          if (oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
        });
    }
  }
// //  Används ej
//   const createdInputText = document.querySelector('.createText');
//   const createdInputTextDropdownContent = document.querySelector('.createdInputTextDropdownContent');

//   createdInputText.addEventListener('click', () => {
//   createdInputTextDropdownContent.classList.toggle('createdInputTextDropdownContent');
// });

// const fontChange = document.querySelector('.fontChange');
// const fontChangeDropdownContent = document.querySelector('.fontChangeDropdownContent');
// const chevron = fontChange.querySelector('.chevron');

// fontChange.addEventListener('click', () => {
//   chevron.classList.toggle('rotate-90');
//   fontChangeDropdownContent.classList.toggle('fontChangeDropdownContent');
// });

  const henrikYolo = document.querySelectorAll('.henrikYolo');
  const magnusYolo = document.querySelectorAll('.magnusYolo');
  
  henrikYolo.forEach((henrik) => {
    const chevron = henrik.querySelector('.chevron');
    henrik.addEventListener('click', () => {
      chevron.classList.toggle('rotate-90');
      henrik.nextElementSibling.classList.toggle('magnusYolo');
    });
  });

  document.getElementById('displayPetName').addEventListener('input', function (event) {
    const text = event.target.value;
    const selectedFont = getSelectedFont();
    updateImageText(text, selectedFont);
    localStorage.setItem('displayPetName', text);
  });

  // New event listener for the font selection
  document.querySelectorAll('.font-choice').forEach(function (radioButton) {
    radioButton.addEventListener('change', function () {
      const text = document.getElementById('displayPetName').value;
      const selectedFont = getSelectedFont();
      updateImageText(text, selectedFont);
    });
  });

  // Function to get the selected font
  function getSelectedFont() {
    const selectedRadioButton = document.querySelector('input[name="Typsnitt"]:checked');
    return selectedRadioButton ? selectedRadioButton.value : 'Arial';
  }

  // Function to update text inside images
  function updateImageText(text, font = 'Arial') {
    document.querySelectorAll('[id^="imageText-"]').forEach(function (imageText) {
      imageText.textContent = text;
      imageText.style.fontFamily = font;
    });
  }

  customElements.define('variant-selector', VariantSelector);
</script>

{% schema %}
{
  "name": "Product"
}
{% endschema %}
