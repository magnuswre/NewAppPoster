<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

{% assign selected_variant = product.selected_or_first_available_variant %}

<style>
  .swiper-button-prev, .swiper-button-next {
    color: black;
    top: auto;
    height: 20px;
    !important;
    }
  .swiper-button-prev:after, .swiper-button-next:after {
    font-size: 20px;
    }
  .swiper-pagination {
    color: black;
    bottom: 0;
    !important;
    }
    .swiper-pagination-bullet-active {
      background: black;
      !important;
    }
    .product--information {
      height: max-content;
    }
</style>

<div class="max-w-3xl mx-auto my-10 border">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
    <div class="product-medias">
      <div>
        <div class="swiper h-94">
          <div class="swiper-wrapper">
            {% for media in product.media %}
              <div class="swiper-slide">
                <div class="h-80 overflow-hidden p-5">
                  {% render 'product-media', media: media %}
                  {{ media.id }}
                </div>
              </div>
            {% endfor %}
          </div>
          <div class="swiper-pagination"></div>

          <div class="swiper-button-prev"></div>
          <div class="swiper-button-next"></div>
        </div>
      </div>
    </div>
    <div class="product--information sticky top-5 p-2 ">
      {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
        <input type="hidden" name="id" value="{{ selected_variant.id }}">

        {% for block in section.blocks %}
          {% case block.type %}
            {% comment %} {% when 'vendor' %}
              <div class="my-3">
                <span class="text-xs text-gray-500">{{ product.vendor }}</span>
              </div> {% endcomment %}
            {% when 'title' %}
              <div class="my-3">
                <h1 class="text-3xl text-gray-900">{{ product.title }}</h1>
              </div>
            {% when 'price' %}
              <div class="my-3" id="price-{{ section.id }}">
                <span class="text-base text-gray-500 line-through">
                  {{ selected_variant.compare_at_price | money }}
                </span>
                <span class="text-lg text-gray-900">
                  {{ selected_variant.price | money }}
                </span>

                {% if selected_variant.price < selected_variant.compare_at_price %}
                  <span class="px-5 py-1 text-sm font-bold bg-red-500 rounded-full text-white mx-4">Sale</span>
                {% endif %}
              </div>

            {% when 'variant_selector' %}
          
              <style>
                input[type='radio'] {
                  display: none;
                }


                .variant-selector-label {
                  background-color: #ceedd8;
                }

                .variant-selector-label.selected {
                  border: 1px solid black
                }

                .magnusYolo {
                  display: none;
                }



                
              </style>

              <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                {% for option in product.options_with_values %}
                  <div>
                    <ul>
                      <li class="w-5/6 flex flex-col" >
                        <h2 class="henrikYolo bg-gray-200 text-center mb-5 h-10 flex items-center justify-center" for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</h2>
                        <div class="flex items-center gap-3 h-10 mb-7 magnusYolo " >
                          {% for value in option.values %}
                            <div class="custom-variants-option border w-19 flex text-center  ">
                              <label class="variant-selector-label py-1 px-1">
                                <input
                                  class="variant-selector-class"
                                  type="radio"
                                  name="options[{{ option.name | escape }}]"
                                  value="{{ value | escape }}"
                                  {% if option.selected_value == value %}
                                    checked
                                  {% endif %}
                                >
                                {{ value }}
                              </label>
                            </div>
                          {% endfor %}
                        </div>
                      </li>
                    </ul>
                  </div>
                  <script type="application/json">
                    {{ product.variants | json }}
                  </script>
                {% endfor %}
              </variant-selector>

            {% when 'quantity' %}
              <div class="my-3">
                <label for="Quantity-{{ section.id }}">Quantity</label>
                <div class="my-2">
                  <input
                    type="number"
                    name="quantity"
                    id="Quantity-{{ section.id }}"
                    value="1"
                    min="1"
                    class="w-full border px-3 py-3"
                  >
                </div>
              </div>
            {% when 'description' %}
              <div class="my-3">
                <p class="text-gray-700">{{ product.description }}</p>
              </div>
            {% when 'checkout_buttons' %}
              <div class="my-3">
                <button
                  type="submit"
                  name="add"
                  id="AddToCart"
                  class="w-full py-4 px-6 bg-gray-900 text-white hover:bg-gray-700 rounded-sm my-2"
                  {% if selected_variant.available == false %}
                    disabled
                  {% endif %}
                >
                  {% if selected_variant.available == false %}
                    Sold Out
                  {% else %}
                    Add to cart
                  {% endif %}
                </button>
              </div>
            {% else %}

          {% endcase %}
        {% endfor %}
      {% endform %}
    </div>
  </div>
</div>

<script>

   
 
 class VariantSelector extends HTMLElement {
  constructor() {
    super();
    this.setInitialSelectedOptions();
    const radioButtons = this.querySelectorAll('.variant-selector-class');
    radioButtons.forEach((radioButton) => {
      radioButton.addEventListener('click', this.onVariantChange.bind(this));
    });
  }

  setInitialSelectedOptions() {
    const selectedOptions = this.querySelectorAll('input[type="radio"]:checked');
    selectedOptions.forEach((selectedOption) => {
      const label = selectedOption.closest('.variant-selector-label');
      if (label) {
        label.classList.add('selected');
      }
    });
  }
    onVariantChange(event) {
        // Get the clicked option and its category
  const clickedOption = event.target.closest('.variant-selector-label');
  const category = clickedOption.closest('ul');

  // Remove the 'selected' class from the previously selected option in the same category
  const previouslySelectedOption = category.querySelector('.variant-selector-label.selected');
  if (previouslySelectedOption) {
    previouslySelectedOption.classList.remove('selected');
  }

  // Add the 'selected' class to the clicked option
  if (clickedOption) {
    clickedOption.classList.add('selected');
  }

      console.log('onVariantChange');
      this.getSelectedOptions();
      this.getSelectedVariant();

      if (this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        this.updatePrice();
      }
    }

    getSelectedOptions() {
      const checkedRadioButtons = document.querySelectorAll('input[type="radio"]:checked');
      this.options = Array.from(checkedRadioButtons, (radioButton) => radioButton.value);
      console.log('this.options:', this.options);
    }

    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }

    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find((variant) => {
        const findings = !variant.options
          .map((option, index) => {
            return this.options[index] === option;
          })
          .includes(false);

        if (findings) return variant;
      });

      // console.log('this.currentVariant:', this.currentVariant);
    }
    updateURL() {
      if (!this.currentVariant) return;
      window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
    }

    updateFormID() {
      const form_input = document.querySelector('#product-form').querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    updatePrice() {
      fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
        .then((response) => response.text())
        .then((responseText) => {
          const id = `price-${this.dataset.section}`;
          const html = new DOMParser().parseFromString(responseText, 'text/html');

          const oldPrice = document.getElementById(id);
          const newPrice = html.getElementById(id);

          if (oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
        });
    }
    
  }
  const henrikYolo = document.querySelectorAll('.henrikYolo');
  const magnusYolo = document.querySelectorAll('.magnusYolo'); 
   
    henrikYolo.forEach((henrik) => {
        henrik.addEventListener('click', () => {
        henrik.nextElementSibling.classList.toggle('magnusYolo');
        });
    });


  customElements.define('variant-selector', VariantSelector);
</script>

<script>
  const swiper = new Swiper('.swiper', {
    direction: 'horizontal',

    pagination: {
      el: '.swiper-pagination',
    },
    navigation: {
      prevEl: '.swiper-button-prev',
      nextEl: '.swiper-button-next',
    },
  });
</script>

{% schema %}
{
  "name": "Product",
  "blocks": [
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "variant_selector",
      "name": "Variant Selector",
      "limit": 1
    },
    {
      "type": "quantity",
      "name": "Quantity",
      "limit": 1
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1
    },
    {
      "type": "checkout_buttons",
      "name": "Checkout Buttons",
      "limit": 1
    }
  ]
}
{% endschema %}
